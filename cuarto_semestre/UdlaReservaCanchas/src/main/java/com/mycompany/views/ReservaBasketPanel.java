/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.views;

import com.formdev.flatlaf.FlatClientProperties;
import com.mycompany.interfaces.DAOReservas;
import com.mycompany.models.Reservas;
import com.mycompany.sistema.AdminDashboard;
import com.mycompany.sistema.DAOReservasImpl;
import com.mycompany.sistema.UserDashboard;
import java.sql.Time;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author dell-pc
 */
public class ReservaBasketPanel extends javax.swing.JPanel {
    private boolean isAdmin;
    private String idBanner;
    /**
     * Creates new form reservaPanel
     */
    public ReservaBasketPanel(boolean isAdmin, String idBanner) {
        initComponents();
        fecha.setMinSelectableDate(new Date());
        this.isAdmin = isAdmin;
        this.idBanner = idBanner;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        tittle = new javax.swing.JLabel();
        heroImg = new javax.swing.JLabel();
        text4 = new javax.swing.JLabel();
        text5 = new javax.swing.JLabel();
        text6 = new javax.swing.JLabel();
        text7 = new javax.swing.JLabel();
        text8 = new javax.swing.JLabel();
        fecha = new com.toedter.calendar.JDateChooser();
        horaInicioCb = new javax.swing.JComboBox<>();
        horaFinCb = new javax.swing.JComboBox<>();
        numPersonasSpin = new javax.swing.JSpinner();
        numCanchaSpin = new javax.swing.JComboBox<>();
        volverBtn = new javax.swing.JButton();
        hacerReservaBtn = new com.mycompany.components.MyButton();

        bg.setBackground(new java.awt.Color(255, 255, 255));

        tittle.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        tittle.setForeground(new java.awt.Color(0, 0, 0));
        tittle.setText("Reservar canchas - Cancha de Basketball");

        heroImg.setBackground(new java.awt.Color(153, 153, 255));
        heroImg.setForeground(new java.awt.Color(102, 102, 255));
        heroImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/basketball (1).jpg"))); // NOI18N

        text4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        text4.setForeground(new java.awt.Color(131, 28, 51));
        text4.setText("Fecha:");

        text5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        text5.setForeground(new java.awt.Color(131, 28, 51));
        text5.setText("Hora de inicio:");

        text6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        text6.setForeground(new java.awt.Color(131, 28, 51));
        text6.setText("Hora de fin:");

        text7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        text7.setForeground(new java.awt.Color(131, 28, 51));
        text7.setText("N° de personas:");

        text8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        text8.setForeground(new java.awt.Color(131, 28, 51));
        text8.setText("N° Cancha:");

        fecha.setDateFormatString("yyyy-MM-dd\n");
        fecha.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        horaInicioCb.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        horaInicioCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "07:00", "08:05", "09:10", "10:15", "11:20", "12:25", "13:30", "14:35", "15:40", "16:45", "17:50", "18:50", "19:50", "20:50", "21:50" }));

        horaFinCb.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        horaFinCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "08:00", "09:05", "10:10", "11:15", "12:20", "13:25", "14:30", "15:35", "16:40", "17:45", "18:50", "19:50", "20:50", "21:50", "22:50" }));

        numPersonasSpin.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        numCanchaSpin.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        numCanchaSpin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cancha 1", "Cancha 2" }));

        volverBtn.setBackground(new java.awt.Color(131, 28, 51));
        volverBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        volverBtn.setForeground(new java.awt.Color(255, 255, 255));
        volverBtn.setText("Volver");
        volverBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverBtnActionPerformed(evt);
            }
        });

        hacerReservaBtn.setBackground(new java.awt.Color(131, 28, 51));
        hacerReservaBtn.setForeground(new java.awt.Color(255, 255, 255));
        hacerReservaBtn.setText("Realizar Reserva");
        hacerReservaBtn.setBorderColor(new java.awt.Color(255, 255, 255));
        hacerReservaBtn.setColor(new java.awt.Color(131, 28, 51));
        hacerReservaBtn.setColorClick(new java.awt.Color(94, 29, 43));
        hacerReservaBtn.setColorOver(new java.awt.Color(94, 29, 43));
        hacerReservaBtn.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        hacerReservaBtn.setRadius(40);
        hacerReservaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hacerReservaBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(text4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 427, Short.MAX_VALUE))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addGap(0, 33, Short.MAX_VALUE)
                        .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(bgLayout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addComponent(hacerReservaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(fecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(bgLayout.createSequentialGroup()
                                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(numPersonasSpin, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(text5, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(horaInicioCb, javax.swing.GroupLayout.Alignment.LEADING, 0, 150, Short.MAX_VALUE))
                                    .addComponent(text7))
                                .addGap(75, 75, 75)
                                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(text8)
                                    .addComponent(horaFinCb, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(text6, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(numCanchaSpin, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 106, Short.MAX_VALUE))
                    .addGroup(bgLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tittle, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(volverBtn)
                        .addGap(18, 18, 18)))
                .addComponent(heroImg, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tittle)
                    .addComponent(volverBtn))
                .addGap(18, 18, 18)
                .addComponent(text4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text5)
                    .addComponent(text6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(horaInicioCb, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(horaFinCb, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text7)
                    .addComponent(text8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numPersonasSpin, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(numCanchaSpin, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(hacerReservaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
            .addComponent(heroImg, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void hacerReservaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hacerReservaBtnActionPerformed
        Reservas reserva = new Reservas();
        Date fechaReserva;
        String fechaReservaStr = ((JTextField)fecha.getDateEditor().getUiComponent()).getText();
        String horaInicioStr = String.valueOf(horaInicioCb.getSelectedItem());
        String horaFinStr = String.valueOf(horaFinCb.getSelectedItem());
        String numPersonas = String.valueOf(numPersonasSpin.getValue());
        String numPersonasStr = String.valueOf(numPersonasSpin.getValue());
        
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm");
        LocalTime horaInicio = LocalTime.parse(horaInicioStr, formatter);
        LocalTime horaFin = LocalTime.parse(horaFinStr, formatter);
        
        try {
            fechaReserva = sdf.parse(fechaReservaStr);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null, "La fecha no tiene el formato correcto", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        reserva.setIdBanner(idBanner);
        reserva.setFecha(fechaReserva);
        reserva.setHoraInicio(Time.valueOf(horaInicio));
        reserva.setHoraFin(Time.valueOf(horaFin));
        if (numCanchaSpin.getSelectedItem() == "Cancha 1") {
            reserva.setCanchaID(3);
        } else {
            reserva.setCanchaID(4);
        }
        reserva.setNumeroPersonas(Integer.parseInt(numPersonas));
        
        try {
            DAOReservas dao = new DAOReservasImpl();
            if (reserva.validarCamposRegistro()) {
                if (dao.validaDisponibilidad(reserva)) {
                    dao.crearReserva(reserva);
                    JOptionPane.showMessageDialog(null, "Reserva realizada", "Reserva", JOptionPane.INFORMATION_MESSAGE);
                    ((JTextField)fecha.getDateEditor().getUiComponent()).setText("");
                    horaInicioCb.setSelectedIndex(0);
                    horaFinCb.setSelectedIndex(0);  
                    numPersonasSpin.setValue(0);
                } else {
                    JOptionPane.showMessageDialog(null, "La cancha no está disponible para ese horario", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ups", "Error", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_hacerReservaBtnActionPerformed

    private void volverBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverBtnActionPerformed
        ReservaPanel reservaPanel = new ReservaPanel(isAdmin, idBanner);
        if (isAdmin) {
            AdminDashboard.ShowPanel(reservaPanel);
        } else {
            UserDashboard.ShowPanel(reservaPanel);
        }
    }//GEN-LAST:event_volverBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg;
    private com.toedter.calendar.JDateChooser fecha;
    private com.mycompany.components.MyButton hacerReservaBtn;
    private javax.swing.JLabel heroImg;
    private javax.swing.JComboBox<String> horaFinCb;
    private javax.swing.JComboBox<String> horaInicioCb;
    private javax.swing.JComboBox<String> numCanchaSpin;
    private javax.swing.JSpinner numPersonasSpin;
    private javax.swing.JLabel text4;
    private javax.swing.JLabel text5;
    private javax.swing.JLabel text6;
    private javax.swing.JLabel text7;
    private javax.swing.JLabel text8;
    private javax.swing.JLabel tittle;
    private javax.swing.JButton volverBtn;
    // End of variables declaration//GEN-END:variables
}
